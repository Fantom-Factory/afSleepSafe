Overview
********
Guards your BedSheet web app against CSFR, XSS, and other attacks, letting you Sleep Safe at night!

For the most part, Sleep Safe is completely unobtrusive. Simply reference 'afSleepSafe' as a dependecny in your project's 'build.fan' and let the sensible defaults monitor your HTTP requests and set HTTP response headers.

Sleep Safe was inspired by Ruby's [Rack Protection]`https://github.com/sinatra/sinatra/tree/master/rack-protection` library.



Sleep Safe Guards
*****************
Sleep Safe is BedSheet middleware that inspects HTTP requests as they come in and returns a '403 Forbidden' should an attack be suspected.

Request inspection is done by Guard classes, and include:

pre>
table:
Class                   Guards Against                            Notes
----------------------  ----------------------------------------  ------------
`CspGuard`              Cross Site Scripting (XSS)                Sets a 'Content-Security-Policy' HTTP response header that tells browsers to restrict where content can be loaded from.
`ContentTypeGuard`      Content Sniffing                          Sets a 'X-Content-Type-Options' HTTP response header that tells browsers to trust the 'Content-Type' header
`CsrfTokenGuard`        Cross Site Forgery Requests (CSRF)        Enforces an customisable Encrypted Token Pattern strategy
`FrameOptionsGuard`     Clickjacking                              Sets an 'X-Frame-Options' HTTP header that tells browsers not to embed the page in a frame
`ReferrerPolicyGuard`   Private / internal URL leaking            Sets a 'Referrer-Policy' HTTP response header that tells browsers how and when to transmit the HTTP Referer (sic) header
`SameOriginGuard`       Cross Site Forgery Requests (CSRF)        Checks the 'Referer' or 'Origin' HTTP header matches the 'Host'
`SessionHijackGuard`    Session Hijacking                         Caches browser user-agent parameters and checks them on each request, dropping the session if they change.
`StrictTransportGuard`  Protocol Downgrades and Cookie Hijacking  Sets a 'Strict-Transport-Security' HTTP header that tells browsers to use HTTPS
`XssProtectionGuard`    Cross Site Scripting (XSS)                Sets an 'X-XSS-Protection' HTTP header that tells browsers enable XSS filtering
<pre

 - `CspGuard` - Guards against Cross Site Scripting (XSS) by setting an 'Content-Security-Policy' HTTP response header that tells browsers to restrict where content can be loaded from.
 - `CsrfTokenGuard` - Guards against CSRF attacks by enforcing an customisable Encrypted Token Pattern strategy.
 - `FrameOptionsGuard` - Guards against clickjacking by setting an 'X-Frame-Options' HTTP response header that tells browsers not to embed the page in a frame.
 - `ReferrerPolicyGuard` - Guards against internal URL leakage by setting a 'Referrer-Policy' HTTP response header that tells browsers how and when to transmit the HTTP Referer (sic) header.
 - `SameOriginGuard` - Guards against CSRF attacks by checking that the 'Referer' or 'Origin' HTTP header matches the 'Host'.
 - `SessionHijackGuard` - Guards against Session hijacking by caching browser user-agent parameters and checking them on each request.
 - `StrictTransportGuard` - Guards against protocol downgrade attacks and Cookie hijacking by setting a 'Strict-Transport-Security' HTTP response header that tells browsers to use HTTPS.
 - `ContentTypeGuard` - Guards against dodgy Content-Type sniffing by setting a 'X-Content-Type-Options' HTTP response header that tells browsers to trust the 'Content-Type' header.
 - `XssProtectionGuard` - Guards against Cross Site Scripting (XSS) by setting an 'X-XSS-Protection' HTTP response header that tells browsers enable XSS filtering.

See the individual class documentation for more details.

